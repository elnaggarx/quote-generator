{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\quote-generator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { EmailIcon, EmailShareButton, FacebookIcon, FacebookShareButton, GabShareButton, HatenaShareButton, InstapaperShareButton, LineShareButton, LinkedinIcon, LinkedinShareButton, LivejournalShareButton, MailruShareButton, OKShareButton, PinterestShareButton, PocketShareButton, RedditShareButton, TelegramShareButton, TumblrShareButton, TwitterShareButton, ViberShareButton, VKShareButton, WhatsappIcon, WhatsappShareButton, WorkplaceShareButton, XIcon } from \"react-share\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const url = \"https://api.quotable.io/random\";\n  let quoteData = {\n    content: \"Let time be your only competitor.\",\n    author: \"Ahmed Saber\"\n  };\n  const [quote, setQuote] = useState(quoteData);\n\n  const generateQuote = () => {\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      setQuote(data);\n    });\n  };\n\n  const copy = () => {\n    navigator.clipboard.writeText(quote.author + \" once said: \" + quote.content);\n    alert('copied');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote Generator React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: quote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: quote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copy,\n          className: \"btn\",\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateQuote,\n          children: \"Generate Another Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sm-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(FacebookShareButton, {\n            url: url,\n            hashtag: quote.author + \" once said: \" + quote.content,\n            children: /*#__PURE__*/_jsxDEV(FacebookIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmailShareButton, {\n            subject: quote.author + \" once said : \",\n            body: quote.content,\n            children: /*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WhatsappShareButton, {\n            url: url,\n            title: quote.author + \" once said: \" + quote.content,\n            children: /*#__PURE__*/_jsxDEV(WhatsappIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TwitterShareButton, {\n            url: url,\n            title: quote.author + \" once said: \" + quote.content,\n            children: /*#__PURE__*/_jsxDEV(XIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LinkedinShareButton, {\n            url: url,\n            title: quote.author + \" once said: \" + quote.content,\n            children: /*#__PURE__*/_jsxDEV(LinkedinIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"sv55tLmWrN78CQEVUV0ITM0H5+s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/quote-generator/src/App.js"],"names":["React","useState","EmailIcon","EmailShareButton","FacebookIcon","FacebookShareButton","GabShareButton","HatenaShareButton","InstapaperShareButton","LineShareButton","LinkedinIcon","LinkedinShareButton","LivejournalShareButton","MailruShareButton","OKShareButton","PinterestShareButton","PocketShareButton","RedditShareButton","TelegramShareButton","TumblrShareButton","TwitterShareButton","ViberShareButton","VKShareButton","WhatsappIcon","WhatsappShareButton","WorkplaceShareButton","XIcon","App","url","quoteData","content","author","quote","setQuote","generateQuote","fetch","then","response","json","data","console","log","copy","navigator","clipboard","writeText","alert"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, {useState} from 'react';\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  GabShareButton,\r\n  HatenaShareButton,\r\n  InstapaperShareButton,\r\n  LineShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  LivejournalShareButton,\r\n  MailruShareButton,\r\n  OKShareButton,\r\n  PinterestShareButton,\r\n  PocketShareButton,\r\n  RedditShareButton,\r\n  TelegramShareButton,\r\n  TumblrShareButton,\r\n  TwitterShareButton,\r\n  ViberShareButton,\r\n  VKShareButton,\r\n  WhatsappIcon,\r\n  WhatsappShareButton,\r\n  WorkplaceShareButton,\r\n  XIcon,\r\n} from \"react-share\";\r\nconst App = () => {\r\n  const url = \"https://api.quotable.io/random\";\r\n  let quoteData = {\r\n    content: \"Let time be your only competitor.\",\r\n    author: \"Ahmed Saber\"\r\n  }\r\n  const [quote, setQuote] = useState(quoteData)\r\n\r\n  const generateQuote = () => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        setQuote(data)\r\n      });\r\n  }\r\n\r\n  const copy = () => {\r\n    navigator.clipboard.writeText(quote.author + \" once said: \" + quote.content)\r\n    alert('copied')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Quote Generator React App</h1>\r\n      <div className=\"container\">\r\n        <p>{quote.content}</p>\r\n        <span>{quote.author}</span>\r\n        <div className=\"btns\">\r\n          <button onClick={copy} className=\"btn\">Copy</button>\r\n          <button onClick={generateQuote}>Generate Another Quote</button>\r\n          <div className='sm-buttons'>\r\n            <FacebookShareButton  url={url} hashtag={quote.author + \" once said: \" + quote.content}>\r\n              <FacebookIcon></FacebookIcon>\r\n            </FacebookShareButton>\r\n            <EmailShareButton subject={quote.author + \" once said : \"} body={quote.content}>\r\n              <EmailIcon ></EmailIcon>\r\n            </EmailShareButton>\r\n            <WhatsappShareButton url={url} title={quote.author + \" once said: \" + quote.content}>\r\n              <WhatsappIcon></WhatsappIcon>\r\n            </WhatsappShareButton>\r\n            <TwitterShareButton url={url} title={quote.author + \" once said: \" + quote.content}>\r\n              <XIcon></XIcon>\r\n            </TwitterShareButton>\r\n            <LinkedinShareButton url={url} title={quote.author + \" once said: \" + quote.content}>\r\n              <LinkedinIcon></LinkedinIcon>\r\n            </LinkedinShareButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}